```verilog
module calendar(
    input wire CLK,
    input wire RST,
    output reg [5:0] Secs,
    output reg [5:0] Mins,
    output reg [5:0] Hours
);
    
    // Handle seconds counter
    always @(posedge CLK or posedge RST) begin
        if (RST) begin
            Secs <= 6'd0;
        end else if (Secs == 6'd59) begin
            Secs <= 6'd0;
        end else begin
            Secs <= Secs + 1;
        end
    end

    // Handle minutes counter
    always @(posedge CLK or posedge RST) begin
        if (RST) begin
            Mins <= 6'd0;
        end else if (Secs == 6'd59) begin
            if (Mins == 6'd59) begin
                Mins <= 6'd0;
            end else begin
                Mins <= Mins + 1;
            end
        end
    end

    // Handle hours counter
    always @(posedge CLK or posedge RST) begin
        if (RST) begin
            Hours <= 6'd0;
        end else if (Secs == 6'd59 && Mins == 6'd59) begin
            if (Hours == 6'd23) begin
                Hours <= 6'd0;
            end else begin
                Hours <= Hours + 1;
            end
        end
    end

endmodule
```