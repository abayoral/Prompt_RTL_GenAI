```verilog
module top_module(
    input clk,
    input load,
    input [255:0] data,
    output reg [255:0] q
);

    reg [15:0] grid [15:0]; // 16x16 grid
    integer i, j;
    
    // Helper function to count live neighbours
    function integer count_live_neighbours;
        input [15:0] row;
        input integer r, c;
        integer r1, c1;
        integer count;
    begin
        count = 0;
        for (r1 = -1; r1 <= 1; r1 = r1 + 1) begin
            for (c1 = -1; c1 <= 1; c1 = c1 + 1) begin
                if (r1 != 0 || c1 != 0) begin // exclude the cell itself
                    count = count + grid[(r + r1) & 4'hF][(c + c1) & 4'hF]; // wrap around using bitwise AND
                end
            end
        end
        count_live_neighbours = count;
    end
    endfunction
    
    // Update the grid
    always @(posedge clk) begin
        if (load) begin
            q = data;
            for (i = 0; i < 16; i = i + 1) begin
                grid[i] = data[16*i +: 16];
            end
        end
        else begin
            reg [15:0] next_grid [15:0];
            for (i = 0; i < 16; i = i + 1) begin
                for (j = 0; j < 16; j = j + 1) begin
                    integer live_neighbours;
                    live_neighbours = count_live_neighbours(grid[i], i, j);
                    if (grid[i][j] == 1) begin
                        if (live_neighbours < 2 || live_neighbours > 3)
                            next_grid[i][j] = 0;
                        else
                            next_grid[i][j] = 1;
                    end
                    else begin
                        if (live_neighbours == 3)
                            next_grid[i][j] = 1;
                        else
                            next_grid[i][j] = 0;
                    end
                end
            end
            
            for (i = 0; i < 16; i = i + 1) begin
                grid[i] = next_grid[i];
            end
            
            for (i = 0; i < 16; i = i + 1) begin
                q[16*i +: 16] = grid[i];
            end
        end
    end

endmodule
```