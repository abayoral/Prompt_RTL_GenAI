module top_module( 
    input [99:0] in,
    output [98:0] out_both,
    output [99:1] out_any,
    output [99:0] out_different );

    // out_both[i] = in[i] & in[i+1] for i=0 to 98 (e.g. out_both[98] = in[98] & in[99])
    assign out_both = in[98:0] & in[99:1];

    // out_any[i] = in[i] | in[i-1] for i=1 to 99 (e.g. out_any[2] = in[2] | in[1])
    assign out_any = in[99:1] | in[98:0];

    // out_different[i] = 1 if in[i] is different from its left neighbor.
    // Treat input as wrapping around so that the left neighbor of in[99] is in[0].
    // We form a rotated version of in such that:
    //   For indices 0 to 98, rotated[i] = in[i+1], and rotated[99] = in[0].
    // Then out_different = in ^ rotated.
    assign out_different = in ^ {in[0], in[99:1]};

endmodule