module accu(
    input         clk,
    input         rst_n,
    input         valid_in,
    input  [7:0]  data_in,
    output reg    valid_out,
    output reg [9:0] data_out
);

  reg [9:0] sum;
  reg [1:0] count; // to count from 0 to 3 (four inputs)

  always @(posedge clk or negedge rst_n) begin
    if (!rst_n) begin
      sum       <= 10'd0;
      count     <= 2'd0;
      valid_out <= 1'b0;
      data_out  <= 10'd0;
    end else begin
      // Default, valid_out is de-asserted except when four data have been accumulated.
      valid_out <= 1'b0; 
      if (valid_in) begin
        if (count == 2'd3) begin
          // On receiving the fourth valid input, complete the accumulation.
          data_out  <= sum + data_in;
          valid_out <= 1'b1;
          // Reset accumulation for the next group.
          sum   <= 10'd0;
          count <= 2'd0;
        end else begin
          sum   <= sum + data_in;
          count <= count + 2'd1;
        end
      end
    end
  end

endmodule