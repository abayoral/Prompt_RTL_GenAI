module full_adder(
    input a,
    input b,
    input cin,
    output sum,
    output cout
);
    assign sum  = a ^ b ^ cin;
    assign cout = (a & b) | (b & cin) | (a & cin);
endmodule

module top_module( 
    input [99:0] a, b,
    input cin,
    output [99:0] cout,
    output [99:0] sum );
    
    // Create an internal carry chain with 101 bits: carry[0] is the input carry
    // and carry[i+1] is the carry out of the i-th full adder.
    wire [100:0] carry;
    assign carry[0] = cin;
    
    genvar i;
    generate
        for(i = 0; i < 100; i = i + 1) begin: fa_chain
            full_adder FA (
                .a(a[i]),
                .b(b[i]),
                .cin(carry[i]),
                .sum(sum[i]),
                .cout(carry[i+1])
            );
            // Connect the carry out of this full adder to the corresponding cout output.
            assign cout[i] = carry[i+1];
        end
    endgenerate
    
endmodule