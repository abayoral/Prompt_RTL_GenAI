```verilog
module freq_div (
    input wire CLK_in,
    input wire RST,
    output reg CLK_50,
    output reg CLK_10,
    output reg CLK_1
);

    reg [1:0] cnt_10;          // 2-bit counter for 10MHz clock
    reg [5:0] cnt_100;         // 6-bit counter for 1MHz clock

    // Frequency divider for 50MHz
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_50 <= 1'b0;
        end else begin
            CLK_50 <= ~CLK_50; // Toggle CLK_50 on every positive edge
        end
    end

    // Frequency divider for 10MHz
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_10 <= 1'b0;
            cnt_10 <= 2'b00;
        end else begin
            if (cnt_10 == 2'b11) begin // Count to 4 (0-3 for 4 cycles)
                CLK_10 <= ~CLK_10; // Toggle CLK_10
                cnt_10 <= 2'b00; // Reset counter
            end else begin
                cnt_10 <= cnt_10 + 1; // Increment counter
            end
        end
    end

    // Frequency divider for 1MHz
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_1 <= 1'b0;
            cnt_100 <= 6'b000000;
        end else begin
            if (cnt_100 == 6'b110001) begin // Count to 49 (0-48 for 50 cycles)
                CLK_1 <= ~CLK_1; // Toggle CLK_1
                cnt_100 <= 6'b000000; // Reset counter
            end else begin
                cnt_100 <= cnt_100 + 1; // Increment counter
            end
        end
    end

endmodule
```