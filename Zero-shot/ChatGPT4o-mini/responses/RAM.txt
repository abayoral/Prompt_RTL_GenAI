```
module dual_port_ram #(
    parameter WIDTH = 6,
    parameter DEPTH = 8
)(
    input wire clk,
    input wire rst_n,
    input wire write_en,
    input wire [2:0] write_addr,
    input wire [WIDTH-1:0] write_data,
    input wire read_en,
    input wire [2:0] read_addr,
    output reg [WIDTH-1:0] read_data
);

    // RAM memory declaration
    reg [WIDTH-1:0] ram [0:DEPTH-1];

    // Synchronous write and read operations
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            // Reset memory to zero
            integer i;
            for (i = 0; i < DEPTH; i = i + 1) begin
                ram[i] <= {WIDTH{1'b0}};
            end
            read_data <= {WIDTH{1'b0}};
        end else begin
            // Write operation
            if (write_en) begin
                ram[write_addr] <= write_data;
            end
            // Read operation
            if (read_en) begin
                read_data <= ram[read_addr];
            end
        end
    end

endmodule
```