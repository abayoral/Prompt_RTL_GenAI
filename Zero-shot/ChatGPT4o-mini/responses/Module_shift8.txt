```
module my_dff8 ( 
    input clk, 
    input [7:0] d, 
    output reg [7:0] q 
);
    always @(posedge clk) begin
        q <= d;
    end
endmodule

module top_module ( 
    input clk, 
    input [7:0] d, 
    input [1:0] sel, 
    output reg [7:0] q 
);
    wire [7:0] stage1, stage2, stage3;

    my_dff8 dff1 (.clk(clk), .d(d), .q(stage1));
    my_dff8 dff2 (.clk(clk), .d(stage1), .q(stage2));
    my_dff8 dff3 (.clk(clk), .d(stage2), .q(stage3));

    always @(posedge clk) begin
        case (sel)
            2'b00: q <= d;
            2'b01: q <= stage1;
            2'b10: q <= stage2;
            2'b11: q <= stage3;
            default: q <= d; // For safety, although sel is expected to be 2 bits
        endcase
    end
endmodule
```