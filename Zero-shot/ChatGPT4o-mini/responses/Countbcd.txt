```
module top_module (
    input clk,
    input reset,   // Synchronous active-high reset
    output [3:1] ena,
    output [15:0] q
);

    reg [3:0] ones, tens, hundreds, thousands;
    assign q = {thousands, hundreds, tens, ones};
    
    assign ena[1] = (ones == 4'd9);
    assign ena[2] = (tens == 4'd9) && ena[1];
    assign ena[3] = (hundreds == 4'd9) && ena[2];

    always @(posedge clk) begin
        if (reset) begin
            ones <= 4'b0000;
            tens <= 4'b0000;
            hundreds <= 4'b0000;
            thousands <= 4'b0000;
        end else begin
            if (ones == 4'd9) begin
                ones <= 4'b0000;
                if (tens == 4'd9) begin
                    tens <= 4'b0000;
                    if (hundreds == 4'd9) begin
                        hundreds <= 4'b0000;
                        if (thousands < 4'd9)
                            thousands <= thousands + 1;
                    end else begin
                        hundreds <= hundreds + 1;
                    end
                end else begin
                    tens <= tens + 1;
                end
            end else begin
                ones <= ones + 1;
            end
        end
    end
endmodule
```