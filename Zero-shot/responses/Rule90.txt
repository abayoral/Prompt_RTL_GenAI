```verilog
module top_module(
    input clk,
    input load,
    input [511:0] data,
    output reg [511:0] q
);

    integer i;

    always @(posedge clk) begin
        if (load) begin
            // If load is high, load the pattern into q.
            q <= data;
        end else begin
            // Calculate the next state of each cell using the Rule 90
            reg [511:0] next_q;
            next_q[0] = q[1]; // q[-1] is assumed to be 0, thus q[0] next is simply q[1]
            next_q[511] = q[510]; // q[512] is assumed to be 0, thus q[511] next is simply q[510]
            
            for (i = 1; i < 511; i = i + 1) begin
                next_q[i] = q[i-1] ^ q[i+1];
            end
            
            q <= next_q;
        end
    end

endmodule
```