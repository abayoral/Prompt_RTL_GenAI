module square_wave(
    input clk,
    input [7:0] freq,
    output reg wave_out
);

    // Internal counter register
    reg [7:0] count;

    // Initialize registers (for simulation and synthesis in FPGAs that support initialization)
    initial begin
        count = 8'd0;
        wave_out = 1'b0;
    end

    // Square wave generation logic
    always @(posedge clk) begin
        // When count reaches freq - 1, toggle the output and reset counter
        if (count == (freq - 1)) begin
            wave_out <= ~wave_out;
            count <= 8'd0;
        end else begin
            // Increment the counter on every clock cycle
            count <= count + 1;
        end
    end

endmodule