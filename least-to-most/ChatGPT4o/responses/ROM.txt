```verilog
module ROM (
    input wire [7:0] addr,     // 8-bit address input
    output reg [15:0] dout     // 16-bit data output
);

    // Memory array: 256 locations of 16-bit width
    reg [15:0] mem [0:255];

    // Initial block to load the ROM with fixed data at the start
    initial begin
        mem[0] = 16'hA0A0;
        mem[1] = 16'hB1B1;
        mem[2] = 16'hC2C2;
        mem[3] = 16'hD3D3;
        // Initialize other memory locations if needed
        // Example: mem[4] = 16'h1234;
    end

    // Always block to update `dout` based on `addr`
    always @(*) begin
        dout = mem[addr];
    end

endmodule
```