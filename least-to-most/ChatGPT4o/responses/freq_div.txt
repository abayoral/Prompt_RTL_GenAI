```verilog
module freq_div (
    input wire CLK_in,
    input wire RST,
    output reg CLK_50,
    output reg CLK_10,
    output reg CLK_1
);

    // Counter for the 10MHz clock
    reg [2:0] cnt_10;
    // Counter for the 1MHz clock
    reg [5:0] cnt_100;

    // Generate CLK_50 (50MHz clock)
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_50 <= 1'b0;
        end else begin
            CLK_50 <= ~CLK_50;
        end
    end

    // Generate CLK_10 (10MHz clock)
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_10 <= 1'b0;
            cnt_10 <= 3'b000;
        end else begin
            if (cnt_10 == 3'b100) begin
                CLK_10 <= ~CLK_10;
                cnt_10 <= 3'b000;
            end else begin
                cnt_10 <= cnt_10 + 1'b1;
            end
        end
    end

    // Generate CLK_1 (1MHz clock)
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_1 <= 1'b0;
            cnt_100 <= 6'b000000;
        end else begin
            if (cnt_100 == 6'd49) begin
                CLK_1 <= ~CLK_1;
                cnt_100 <= 6'b000000;
            end else begin
                cnt_100 <= cnt_100 + 1'b1;
            end
        end
    end

endmodule
```