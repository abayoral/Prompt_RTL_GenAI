```verilog
module calendar (
    input wire CLK,
    input wire RST,
    output reg [5:0] Secs,
    output reg [5:0] Mins,
    output reg [4:0] Hours
);

    // Handle Seconds Counting
    always @(posedge CLK or posedge RST) begin
        if (RST) begin
            Secs <= 6'd0;
        end else if (Secs == 6'd59) begin
            Secs <= 6'd0;
        end else begin
            Secs <= Secs + 6'd1;
        end
    end

    // Handle Minutes Counting
    always @(posedge CLK or posedge RST) begin
        if (RST) begin
            Mins <= 6'd0;
        end else if ((Secs == 6'd59) && (Mins == 6'd59)) begin
            Mins <= 6'd0;
        end else if (Secs == 6'd59) begin
            Mins <= Mins + 6'd1;
        end
    end

    // Handle Hours Counting
    always @(posedge CLK or posedge RST) begin
        if (RST) begin
            Hours <= 5'd0;
        end else if ((Secs == 6'd59) && (Mins == 6'd59) && (Hours == 5'd23)) begin
            Hours <= 5'd0;
        end else if ((Secs == 6'd59) && (Mins == 6'd59)) begin
            Hours <= Hours + 5'd1;
        end
    end

endmodule
```