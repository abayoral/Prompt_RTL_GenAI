```verilog
module top_module(
    input clk,
    input reset,    // Active-high synchronous reset to 32'h1
    output reg [31:0] q
); 

    always @(posedge clk) begin
        if (reset) begin
            q <= 32'h1; // Reset to the seed value of 1
        end else begin
            // Galois LFSR with taps at bit positions: 32, 22, 2, and 1
            q[31:1] <= q[30:0]; // Shift the bits to the left
            q[0] <= q[31] ^ q[21] ^ q[1] ^ q[0]; // XOR the tap bits with feedback
        end
    end

endmodule
```