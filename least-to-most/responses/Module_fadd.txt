```verilog
module add1 (
    input a,
    input b,
    input cin,
    output sum,
    output cout
);
    assign {cout, sum} = a + b + cin;
endmodule

module add16 (
    input [15:0] a,
    input [15:0] b,
    input cin,
    output [15:0] sum,
    output cout
);
    wire [14:0] carry;
    add1 u0 (a[0], b[0], cin, sum[0], carry[0]);
    genvar i;
    generate
        for (i = 1; i < 16; i = i + 1) begin : adder
            add1 u (a[i], b[i], carry[i - 1], sum[i], carry[i]);
        end
    endgenerate
    assign cout = carry[15];
endmodule

module top_module (
    input [31:0] a,
    input [31:0] b,
    output [31:0] sum
);
    wire cout_lower;

    add16 lower_half (
        .a(a[15:0]),
        .b(b[15:0]),
        .cin(1'b0),
        .sum(sum[15:0]),
        .cout(cout_lower)
    );

    add16 upper_half (
        .a(a[31:16]),
        .b(b[31:16]),
        .cin(cout_lower),
        .sum(sum[31:16]),
        .cout()
    );
endmodule
```