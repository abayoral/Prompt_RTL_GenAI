```verilog
module top_module (
    input clk,
    input reset,   // Synchronous active-high reset
    output [3:1] ena,
    output [15:0] q
);

    reg [3:0] ones, tens, hundreds, thousands;

    // One-digit BCD counters for each place value
    always @(posedge clk) begin
        if (reset) begin
            ones <= 4'b0000;
            tens <= 4'b0000;
            hundreds <= 4'b0000;
            thousands <= 4'b0000;
        end
        else begin
            // Increment ones
            if (ones == 4'b1001) begin
                ones <= 4'b0000;

                // Increment tens
                if (tens == 4'b1001) begin
                    tens <= 4'b0000;

                    // Increment hundreds
                    if (hundreds == 4'b1001) begin
                        hundreds <= 4'b0000;

                        // Increment thousands
                        if (thousands == 4'b1001) begin
                            thousands <= 4'b0000;
                        end
                        else begin
                            thousands <= thousands + 1;
                        end
                    end
                    else begin
                        hundreds <= hundreds + 1;
                    end
                end
                else begin
                    tens <= tens + 1;
                end
            end
            else begin
                ones <= ones + 1;
            end
        end
    end

    // Enable signals for other digits
    assign ena[1] = (ones == 4'b1001);
    assign ena[2] = ena[1] && (tens == 4'b1001);
    assign ena[3] = ena[2] && (hundreds == 4'b1001);

    // Concatenate outputs
    assign q = {thousands, hundreds, tens, ones};

endmodule
```