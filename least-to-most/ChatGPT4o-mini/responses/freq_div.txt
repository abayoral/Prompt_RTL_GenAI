```
module freq_div(
    input wire CLK_in,
    input wire RST,
    output reg CLK_50,
    output reg CLK_10,
    output reg CLK_1
);
    reg [1:0] cnt_10;      // 2 bits counter for 10MHz clock
    reg [5:0] cnt_100;     // 6 bits counter for 1MHz clock

    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_50 <= 0;
        end else begin
            CLK_50 <= ~CLK_50; // Toggle CLK_50 on every positive edge of CLK_in
        end
    end

    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_10 <= 0;
            cnt_10 <= 0;
        end else begin
            if (cnt_10 == 2'b11) begin // Count to 4
                CLK_10 <= ~CLK_10;     // Toggle CLK_10
                cnt_10 <= 0;           // Reset counter
            end else begin
                cnt_10 <= cnt_10 + 1; // Increment the counter
            end
        end
    end

    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_1 <= 0;
            cnt_100 <= 0;
        end else begin
            if (cnt_100 == 6'b110001) begin // Count to 49
                CLK_1 <= ~CLK_1;           // Toggle CLK_1
                cnt_100 <= 0;              // Reset counter
            end else begin
                cnt_100 <= cnt_100 + 1;    // Increment the counter
            end
        end
    end
endmodule
```