```
module top_module(
    input in,
    input [3:0] state,
    output [3:0] next_state,
    output out); //

    parameter A=0, B=1, C=2, D=3;

    // State transition logic: Derive an equation for each state flip-flop.
    assign next_state[A] = (state[A] & ~in); // Stay in A when in = 0
    assign next_state[B] = (state[A] & in) | (state[B] & ~in); // Move to B from A when in = 1, stay in B when in = 0
    assign next_state[C] = (state[B] & in) | (state[C] & ~in); // Move to C from B when in = 1, stay in C when in = 0
    assign next_state[D] = (state[C] & in) | (state[D] & ~in); // Move to D from C when in = 1, stay in D when in = 0

    // Output logic: 
    assign out = (state[D]); // Output is 1 when in state D, otherwise 0

endmodule
```