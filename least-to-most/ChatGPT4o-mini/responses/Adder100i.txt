```
module top_module( 
    input [99:0] a, b,
    input cin,
    output [99:0] cout,
    output [99:0] sum );

    wire [100:0] carry; // 100 carry wires to hold the intermediate carry values

    assign carry[0] = cin; // input carry

    generate
        genvar i;
        for (i = 0; i < 100; i = i + 1) begin: full_adder
            full_adder fa (
                .a(a[i]),
                .b(b[i]),
                .cin(carry[i]),
                .sum(sum[i]),
                .cout(carry[i + 1])
            );
        end
    endgenerate

    assign cout = carry[99:0]; // final carry outputs from each full adder

endmodule

module full_adder (
    input a, b, cin,
    output sum, cout
);
    assign sum = a ^ b ^ cin; // sum calculation
    assign cout = (a & b) | (cin & (a ^ b)); // carry-out calculation
endmodule
```