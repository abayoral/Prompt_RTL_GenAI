As a professional Verilog designer, your task is to develop a Verilog module that functions as a clock generator. This module, named `clkgenerator`, is designed to output a periodic clock signal. The periodicity of this signal is determined by the `PERIOD` parameter, which is set to a default value of 10. This period dictates the frequency of the square wave output.

**Module Name:**
- The module is named `clkgenerator`, a descriptive term that indicates its primary function of generating a clock signal.

**Parameter:**
- The key parameter within this module is `PERIOD`, which has a default value of 10. This parameter defines the complete cycle duration of the clock signal. An understanding of how this parameter affects the toggling frequency will be crucial in implementing and adjusting the module for various applications.

**Output Port:**
- The module includes a single output port named `clk`, which carries the generated clock signal. This output should reflect a square wave pattern that alternates at regular intervals determined by half of the `PERIOD`.

**Implementation Detail:**
- Use an `initial` block to establish the starting state of the `clk` signal. The initial value should be set to zero to ensure predictable behavior upon simulation or synthesis.
- The core functionality of the module should focus on toggling the `clk` signal every `PERIOD/2` time units. This logic will form the basis for generating a consistent square wave output that meets the requirements of the designated period.
- Consider how to implement this toggling mechanism efficiently within the constraints of Verilog, using constructs that are synthesizable for real-world applications.

Please provide a comprehensive Verilog code for this `clkgenerator` module that accurately captures the described functionality.