```
module multi_pipe_8bit (
    input wire clk,
    input wire rst_n,
    input wire mul_en_in,
    input wire [7:0] mul_a,
    input wire [7:0] mul_b,
    output wire mul_en_out,
    output reg [15:0] mul_out
);

    reg mul_en_out_reg;
    reg [7:0] mul_a_reg;
    reg [7:0] mul_b_reg;
    reg [15:0] partial_products [0:7];
    reg [15:0] sum [0:7];
    reg [15:0] mul_out_reg;
    integer i;

    // Control Logic for Enable Output
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            mul_en_out_reg <= 0;
        end else begin
            mul_en_out_reg <= mul_en_in;
        end
    end

    assign mul_en_out = mul_en_out_reg;

    // Input Registers
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            mul_a_reg <= 0;
            mul_b_reg <= 0;
        end else if (mul_en_in) begin
            mul_a_reg <= mul_a;
            mul_b_reg <= mul_b;
        end
    end

    // Partial Products Generation
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            for (i = 0; i < 8; i = i + 1) begin
                partial_products[i] <= 0;
            end
        end else if (mul_en_in) begin
            for (i = 0; i < 8; i = i + 1) begin
                partial_products[i] <= mul_a_reg * {8'b0, mul_b_reg[i]};
            end
        end
    end

    // Sum Calculation
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            for (i = 0; i < 8; i = i + 1) begin
                sum[i] <= 0;
            end
        end else begin
            mul_out_reg <= 0; // reset product accumulator
            for (i = 0; i < 8; i = i + 1) begin
                mul_out_reg <= mul_out_reg + partial_products[i];
            end
        end
    end

    // Final Product Assembly
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            mul_out <= 0;
        end else if (mul_en_out_reg) begin
            mul_out <= mul_out_reg;
        end else begin
            mul_out <= 0; // Output is zero when multiplication is not enabled
        end
    end

endmodule
```