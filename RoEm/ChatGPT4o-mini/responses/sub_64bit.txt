```verilog
module sub_64bit (
    input  signed [63:0] A,
    input  signed [63:0] B,
    output signed [63:0] result,
    output overflow
);

wire signed [63:0] temp_result;

// Perform the subtraction
assign temp_result = A - B;
assign result = temp_result;

// Overflow detection logic
assign overflow = (A[63] == 0 && B[63] == 1 && temp_result[63] == 1) || // Positive overflow
                  (A[63] == 1 && B[63] == 0 && temp_result[63] == 0); // Negative overflow

endmodule
```