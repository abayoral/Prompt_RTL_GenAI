```verilog
module barrel_shifter(
    input [7:0] in,
    input [2:0] ctrl,
    output [7:0] out
);
    
    wire [7:0] shift_1, shift_2, shift_4;

    // Rotate Left by 1
    assign shift_1 = {in[6:0], in[7]};
    
    // Rotate Left by 2
    assign shift_2 = {in[5:0], in[7:6]};
    
    // Rotate Left by 4
    assign shift_4 = {in[3:0], in[7:4]};
    
    // Mux for selecting shift_4, shift_2, or shift_1 based on ctrl
    wire [7:0] shift_stage_1;
    wire [7:0] shift_stage_2;

    assign shift_stage_1 = ctrl[2] ? shift_4 : in; // If ctrl[2] is high, use shift_4, otherwise original in
    assign shift_stage_2 = ctrl[1] ? shift_2 : shift_stage_1; // If ctrl[1] is high, use shift_2, otherwise result from stage 1

    // Final output selection based on ctrl[0]
    assign out = ctrl[0] ? shift_1 : shift_stage_2;

endmodule
```