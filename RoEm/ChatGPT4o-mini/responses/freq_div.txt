```
module freq_div (
    input wire CLK_in,
    input wire RST,
    output reg CLK_50,
    output reg CLK_10,
    output reg CLK_1
);

    reg [1:0] cnt_50;  // Counter for CLK_50
    reg [3:0] cnt_10;  // Counter for CLK_10
    reg [6:0] cnt_1;   // Counter for CLK_1

    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            cnt_50 <= 0;
            CLK_50 <= 0;
            cnt_10 <= 0;
            CLK_10 <= 0;
            cnt_1 <= 0;
            CLK_1 <= 0;
        end else begin
            // Generate CLK_50 (divide by 2)
            cnt_50 <= cnt_50 + 1;
            if (cnt_50 == 1) begin
                CLK_50 <= ~CLK_50;
                cnt_50 <= 0;
            end
            
            // Generate CLK_10 (divide by 10)
            cnt_10 <= cnt_10 + 1;
            if (cnt_10 == 4) begin
                CLK_10 <= ~CLK_10;
                cnt_10 <= 0;
            end
            
            // Generate CLK_1 (divide by 100)
            cnt_1 <= cnt_1 + 1;
            if (cnt_1 == 49) begin
                CLK_1 <= ~CLK_1;
                cnt_1 <= 0;
            end
        end
    end

endmodule
```