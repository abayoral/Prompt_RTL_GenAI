module top_module(
    input clk,
    input a,
    input b,
    output wire out_assign,
    output reg out_always_comb,
    output reg out_always_ff
);

// 1. XOR using an assign statement
assign out_assign = a ^ b;

// 2. XOR using a combinational always block
always @(*) begin
    out_always_comb = a ^ b;
end

// 3. XOR using a clocked always block
always @(posedge clk) begin
    out_always_ff <= a ^ b;
end

endmodule