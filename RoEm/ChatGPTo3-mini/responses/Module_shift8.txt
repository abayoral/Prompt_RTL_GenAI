module top_module ( 
    input clk, 
    input [7:0] d, 
    input [1:0] sel, 
    output [7:0] q 
);
    wire [7:0] dff1_out;
    wire [7:0] dff2_out;
    wire [7:0] dff3_out;
    
    // Instantiate three 8-bit D flip-flops (my_dff8) forming the shift register chain.
    my_dff8 dff_inst1 (
        .clk(clk),
        .d(d),
        .q(dff1_out)
    );
    
    my_dff8 dff_inst2 (
        .clk(clk),
        .d(dff1_out),
        .q(dff2_out)
    );
    
    my_dff8 dff_inst3 (
        .clk(clk),
        .d(dff2_out),
        .q(dff3_out)
    );
    
    // 4-to-1 Multiplexer: selects output based on sel.
    reg [7:0] mux_out;
    
    always @(*) begin
        case(sel)
            2'b00: mux_out = d;        // Zero cycle delay: direct input
            2'b01: mux_out = dff1_out;   // Delay of one cycle
            2'b10: mux_out = dff2_out;   // Delay of two cycles
            2'b11: mux_out = dff3_out;   // Delay of three cycles
            default: mux_out = 8'b0;     // Default case (should not occur)
        endcase
    end
    
    assign q = mux_out;
    
endmodule