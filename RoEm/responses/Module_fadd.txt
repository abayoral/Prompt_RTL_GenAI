```verilog
module add1 ( input a, input b, input cin, output sum, output cout );
    assign {cout, sum} = a + b + cin;
endmodule

module add16 ( input [15:0] a, input [15:0] b, input cin, output [15:0] sum, output cout );
    wire [15:0] carry;
    
    add1 add1_0 ( .a(a[0]), .b(b[0]), .cin(cin), .sum(sum[0]), .cout(carry[1]) );
    genvar i;
    generate
        for (i = 1; i < 16; i = i + 1) begin : fadd
            add1 add1_inst ( .a(a[i]), .b(b[i]), .cin(carry[i]), .sum(sum[i]), .cout(carry[i+1]) );
        end
    endgenerate

    assign cout = carry[16];
endmodule

module top_module (
    input [31:0] a,
    input [31:0] b,
    output [31:0] sum
);
    wire cout1, cout2;
    
    add16 lower_adder (
        .a(a[15:0]),
        .b(b[15:0]),
        .cin(1'b0),
        .sum(sum[15:0]),
        .cout(cout1)
    );
    
    add16 upper_adder (
        .a(a[31:16]),
        .b(b[31:16]),
        .cin(cout1),
        .sum(sum[31:16]),
        .cout(cout2)
    );
endmodule
```