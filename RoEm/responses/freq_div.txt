```verilog
module freq_div(
    input wire CLK_in,  // 100MHz input clock
    input wire RST,     // Reset signal
    output reg CLK_50,  // 50MHz output clock
    output reg CLK_10,  // 10MHz output clock
    output reg CLK_1    // 1MHz output clock
);

    reg [3:0] cnt_10;    // 4-bit counter for 10MHz clock
    reg [5:0] cnt_100;   // 6-bit counter for 1MHz clock

    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_50 <= 0;
        end else begin
            CLK_50 <= ~CLK_50;  // Toggle CLK_50 every clock cycle
        end
    end

    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            cnt_10 <= 0;
            CLK_10 <= 0;
        end else begin
            if (cnt_10 == 4) begin
                cnt_10 <= 0;
                CLK_10 <= ~CLK_10;  // Toggle CLK_10 every 5 clock cycles
            end else begin
                cnt_10 <= cnt_10 + 1;
            end
        end
    end

    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            cnt_100 <= 0;
            CLK_1 <= 0;
        end else begin
            if (cnt_100 == 49) begin
                cnt_100 <= 0;
                CLK_1 <= ~CLK_1;  // Toggle CLK_1 every 50 clock cycles
            end else begin
                cnt_100 <= cnt_100 + 1;
            end
        end
    end

endmodule
```