```verilog
module freq_div(
    input wire CLK_in,  // 100MHz clock input
    input wire RST,     // Reset signal
    output reg CLK_50,  // 50MHz clock output
    output reg CLK_10,  // 10MHz clock output
    output reg CLK_1    // 1MHz clock output
);

    reg [2:0] cnt_10;   // Counter for 10MHz clock
    reg [5:0] cnt_100;  // Counter for 1MHz clock

    // Clock division logic
    
    // CLK_50 generation
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            CLK_50 <= 0;
        end else begin
            CLK_50 <= ~CLK_50;
        end
    end

    // CLK_10 generation
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            cnt_10 <= 0;
            CLK_10 <= 0;
        end else if (cnt_10 == 4) begin
            CLK_10 <= ~CLK_10;
            cnt_10 <= 0;
        end else begin
            cnt_10 <= cnt_10 + 1;
        end
    end

    // CLK_1 generation
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            cnt_100 <= 0;
            CLK_1 <= 0;
        end else if (cnt_100 == 49) begin
            CLK_1 <= ~CLK_1;
            cnt_100 <= 0;
        end else begin
            cnt_100 <= cnt_100 + 1;
        end
    end

endmodule
```