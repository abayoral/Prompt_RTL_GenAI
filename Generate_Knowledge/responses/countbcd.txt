```verilog
module top_module (
    input clk,
    input reset,   // Synchronous active-high reset
    output [3:1] ena,
    output [15:0] q);

    reg [3:0] ones, tens, hundreds, thousands;

    // Assign the enable signals
    assign ena[1] = (ones == 4'b1001); // Enable tens when ones digit rolls over to 0
    assign ena[2] = (ena[1] && tens == 4'b1001); // Enable hundreds when tens digit rolls over to 0
    assign ena[3] = (ena[2] && hundreds == 4'b1001); // Enable thousands when hundreds digit rolls over to 0

    // Assign the BCD output
    assign q = {thousands, hundreds, tens, ones};

    always @(posedge clk) begin
        if (reset) begin
            ones <= 4'd0;
            tens <= 4'd0;
            hundreds <= 4'd0;
            thousands <= 4'd0;
        end else begin
            // Ones digit counter
            if (ones == 4'b1001) begin
                ones <= 4'd0;
            end else begin
                ones <= ones + 4'd1;
            end

            // Tens digit counter
            if (ena[1]) begin
                if (tens == 4'b1001) begin
                    tens <= 4'd0;
                end else begin
                    tens <= tens + 4'd1;
                end
            end

            // Hundreds digit counter
            if (ena[2]) begin
                if (hundreds == 4'b1001) begin
                    hundreds <= 4'd0;
                end else begin
                    hundreds <= hundreds + 4'd1;
                end
            end

            // Thousands digit counter
            if (ena[3]) begin
                if (thousands == 4'b1001) begin
                    thousands <= 4'd0;
                end else begin
                    thousands <= thousands + 4'd1;
                end
            end
        end
    end
endmodule
```