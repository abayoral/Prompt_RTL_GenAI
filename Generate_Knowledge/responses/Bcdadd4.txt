```verilog
module bcd_fadd (
    input [3:0] a,
    input [3:0] b,
    input       cin,
    output      cout,
    output [3:0] sum );

    wire [4:0] total;

    assign total = a + b + cin;

    assign sum = (total > 9) ? (total - 10) : total;
    assign cout = (total > 9) ? 1 : 0;

endmodule

module top_module ( 
    input [15:0] a, b,
    input cin,
    output cout,
    output [15:0] sum );

    wire cout0, cout1, cout2, cout3;

    bcd_fadd fa0 (
        .a(a[3:0]),
        .b(b[3:0]),
        .cin(cin),
        .cout(cout0),
        .sum(sum[3:0])
    );

    bcd_fadd fa1 (
        .a(a[7:4]),
        .b(b[7:4]),
        .cin(cout0),
        .cout(cout1),
        .sum(sum[7:4])
    );

    bcd_fadd fa2 (
        .a(a[11:8]),
        .b(b[11:8]),
        .cin(cout1),
        .cout(cout2),
        .sum(sum[11:8])
    );

    bcd_fadd fa3 (
        .a(a[15:12]),
        .b(b[15:12]),
        .cin(cout2),
        .cout(cout3),
        .sum(sum[15:12])
    );

    assign cout = cout3;

endmodule
```