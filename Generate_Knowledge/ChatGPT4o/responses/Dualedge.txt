```verilog
module top_module (
    input clk,
    input d,
    output reg q
);

    reg q_pos, q_neg;

    // Positive edge flip-flop, capturing the value of d at posedge clock
    always @(posedge clk) begin
        q_pos <= d;
    end

    // Negative edge flip-flop, capturing the value of d at negedge clock
    always @(negedge clk) begin
        q_neg <= d;
    end

    // Output logic, sensitive to either clock edge change
    always @(posedge clk or negedge clk) begin
        // On either edge of the clock, transfer the respective flip-flop result to q
        if (clk) 
            q <= q_pos;
        else 
            q <= q_neg;
    end

endmodule
```
