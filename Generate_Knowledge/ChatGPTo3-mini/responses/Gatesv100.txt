module top_module( 
    input [99:0] in,
    output [98:0] out_both,
    output [99:1] out_any,
    output [99:0] out_different 
);
    // out_both[i] is 1 if both in[i] and its left neighbor in[i+1] are 1.
    // For i=98: out_both[98] = in[98] & in[99].
    assign out_both = in[98:0] & in[99:1];

    // out_any[i] is 1 if either in[i] or its right neighbor in[i-1] is 1.
    // For i=2: out_any[2] = in[2] | in[1].
    assign out_any = in[99:1] | in[98:0];

    // out_different[i] is 1 if in[i] is different from its left neighbor.
    // Here we define the left neighbor of in[i] as in[i+1] with wrapping: 
    // in[99]'s neighbor is in[0]. Thus, for 0<=i<=98: out_different[i] = in[i] xor in[i+1],
    // and out_different[99] = in[99] xor in[0].
    assign out_different = in ^ {in[0], in[99:1]};

endmodule