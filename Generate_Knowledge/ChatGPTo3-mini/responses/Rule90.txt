module top_module(
    input clk,
    input load,
    input [511:0] data,
    output reg [511:0] q
);

    integer i;
    reg [511:0] next_val;

    always @(posedge clk) begin
        if (load)
            q <= data;
        else begin
            for (i = 0; i < 512; i = i + 1) begin
                if (i == 0)
                    // Left boundary: assume q[-1] = 0, so next state is 0 XOR q[1] = q[1]
                    next_val[i] = q[1];
                else if (i == 511)
                    // Right boundary: assume q[512] = 0, so next state is q[510] XOR 0 = q[510]
                    next_val[i] = q[510];
                else
                    // Rule 90: cell's new state is XOR of its left and right neighbors
                    next_val[i] = q[i-1] ^ q[i+1];
            end
            q <= next_val;
        end
    end

endmodule