module top_module (
    input clk,
    input resetn,
    input [1:0] byteena,
    input [15:0] d,
    output reg [15:0] q
);

    always @(posedge clk) begin
        if (!resetn)
            q <= 16'b0;
        else begin
            // Update lower byte if enabled
            if (byteena[0])
                q[7:0] <= d[7:0];
            // Otherwise, maintain current lower byte value
            else
                q[7:0] <= q[7:0];

            // Update upper byte if enabled
            if (byteena[1])
                q[15:8] <= d[15:8];
            // Otherwise, maintain current upper byte value
            else
                q[15:8] <= q[15:8];
        end
    end

endmodule