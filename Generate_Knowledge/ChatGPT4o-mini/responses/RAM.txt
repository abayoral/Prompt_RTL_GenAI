```verilog
module dual_port_ram (
    input wire clk,
    input wire rst_n,
    input wire write_en,
    input wire [2:0] write_addr,
    input wire [5:0] write_data,
    input wire read_en,
    input wire [2:0] read_addr,
    output reg [5:0] read_data
);

    parameter WIDTH = 6;
    parameter DEPTH = 8;

    reg [WIDTH-1:0] ram [0:DEPTH-1];

    // Synchronous write operation
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            // Reset memory contents to zero
            integer i;
            for (i = 0; i < DEPTH; i = i + 1) begin
                ram[i] <= 6'b000000;
            end
        end else if (write_en) begin
            ram[write_addr] <= write_data;
        end
    end

    // Synchronous read operation
    always @(posedge clk) begin
        if (read_en) begin
            read_data <= ram[read_addr];
        end
    end

endmodule
```