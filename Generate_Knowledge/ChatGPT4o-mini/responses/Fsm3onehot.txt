```
module top_module(
    input in,
    input [3:0] state,
    output [3:0] next_state,
    output out); //

    parameter A=0, B=1, C=2, D=3;

    // State transition logic: Derive an equation for each state flip-flop.
    assign next_state[A] = (state[A] & ~in); // State A stays in A if in=0
    assign next_state[B] = (state[A] & in) | (state[B] & ~in); // State B transitions to C if in=1, stays if in=0
    assign next_state[C] = (state[B] & in) | (state[C] & ~in); // State C transitions to A if in=0, stays in B if in=1
    assign next_state[D] = (state[C] & in) | (state[D] & ~in); // State D transitions to C if in=0, stays in B if in=1

    // Output logic: Output is 1 only when in state D
    assign out = state[D];

endmodule
```