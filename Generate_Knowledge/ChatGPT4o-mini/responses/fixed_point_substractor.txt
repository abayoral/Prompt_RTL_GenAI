```
module fixed_point_subtractor #(parameter Q = 16, parameter N = 32) (
    input [N-1:0] a,
    input [N-1:0] b,
    output reg [N-1:0] c
);
    
    reg signed [N-1:0] res;
    
    always @(*) begin
        if ((a[N-1] == b[N-1])) begin // Both inputs have the same sign
            res = a - b; // Directly perform subtraction
        end else begin // a and b have different signs
            if (a[N-1] == 1'b0 && b[N-1] == 1'b1) begin // a positive, b negative
                res = a + (~b + 1'b1); // Add absolute values
            end else begin // a negative, b positive
                res = (~a + 1'b1) + b; // Add absolute values
            end
        end
        
        // Handling zero result
        if (res == 0) begin
            c = {1'b0, {N-1{1'b0}}}; // Explicitly set the sign bit to 0
        end else begin
            c = res; // Assign result directly
        end
    end
    
endmodule
```