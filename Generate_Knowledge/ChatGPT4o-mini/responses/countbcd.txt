```
module top_module (
    input clk,
    input reset,   // Synchronous active-high reset
    output [3:1] ena,
    output [15:0] q
);

    reg [3:0] ones;  // Ones digit
    reg [3:0] tens;  // Tens digit
    reg [3:0] hundreds; // Hundreds digit
    reg [3:0] thousands; // Thousands digit

    assign q = {thousands, hundreds, tens, ones};

    // Enable signals
    assign ena[1] = (ones == 9) && !reset; // Enable for tens
    assign ena[2] = (tens == 9 && ones == 9) && !reset; // Enable for hundreds
    assign ena[3] = (hundreds == 9 && tens == 9 && ones == 9) && !reset; // Enable for thousands

    always @(posedge clk) begin
        if (reset) begin
            ones <= 4'b0000;
            tens <= 4'b0000;
            hundreds <= 4'b0000;
            thousands <= 4'b0000;
        end else begin
            // Increment ones
            if (ones < 4'b1001) begin
                ones <= ones + 1;
            end else begin
                ones <= 4'b0000;
                // Increment tens
                if (tens < 4'b1001) begin
                    tens <= tens + 1;
                end else begin
                    tens <= 4'b0000;
                    // Increment hundreds
                    if (hundreds < 4'b1001) begin
                        hundreds <= hundreds + 1;
                    end else begin
                        hundreds <= 4'b0000;
                        // Increment thousands
                        if (thousands < 4'b1001) begin
                            thousands <= thousands + 1;
                        end else begin
                            thousands <= 4'b0000;
                        end
                    end
                end
            end
        end
    end

endmodule
```