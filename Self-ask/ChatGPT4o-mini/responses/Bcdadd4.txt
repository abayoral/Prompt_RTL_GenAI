```verilog
module bcd_fadd (
    input [3:0] a,
    input [3:0] b,
    input     cin,
    output   cout,
    output [3:0] sum );

    wire [4:0] total; // 5 bits to handle carry
    assign total = a + b + cin;
    
    assign cout = (total > 4'd9);
    assign sum = cout ? (total + 4'd6) : total[3:0];

endmodule

module top_module ( 
    input [15:0] a, b,
    input cin,
    output cout,
    output [15:0] sum );

    wire [3:0] s0, s1, s2, s3;
    wire c0, c1, c2, c3;

    bcd_fadd adder0 (.a(a[3:0]), .b(b[3:0]), .cin(cin),    .cout(c0), .sum(s0));
    bcd_fadd adder1 (.a(a[7:4]), .b(b[7:4]), .cin(c0),     .cout(c1), .sum(s1));
    bcd_fadd adder2 (.a(a[11:8]), .b(b[11:8]), .cin(c1),   .cout(c2), .sum(s2));
    bcd_fadd adder3 (.a(a[15:12]), .b(b[15:12]), .cin(c2), .cout(c3), .sum(s3));

    assign sum = {s3, s2, s1, s0};
    assign cout = c3;

endmodule
```