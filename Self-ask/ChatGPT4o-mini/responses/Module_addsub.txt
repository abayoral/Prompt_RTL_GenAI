```verilog
module add16 ( input[15:0] a, input[15:0] b, input cin, output[15:0] sum, output cout );

    assign {cout, sum} = a + b + cin;

endmodule

module top_module(
    input [31:0] a,
    input [31:0] b,
    input sub,
    output [31:0] sum
);

    wire [15:0] a_lower = a[15:0];
    wire [15:0] a_upper = a[31:16];
    wire [15:0] b_lower = b[15:0];
    wire [15:0] b_upper = b[31:16];
    
    wire [15:0] b_lower_inverted = b_lower ^ {16{sub}};
    wire [15:0] b_upper_inverted = b_upper ^ {16{sub}};

    wire cout_lower, cout_upper;

    add16 lower_adder (.a(a_lower), .b(b_lower_inverted), .cin(sub), .sum(sum[15:0]), .cout(cout_lower));
    add16 upper_adder (.a(a_upper), .b(b_upper_inverted), .cin(cout_lower), .sum(sum[31:16]), .cout(cout_upper));

endmodule
```