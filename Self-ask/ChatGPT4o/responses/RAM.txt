```verilog
module dual_port_ram #(
    parameter WIDTH = 6,
    parameter DEPTH = 8
)(
    input wire clk,
    input wire rst_n,
    input wire write_en,
    input wire [2:0] write_addr,
    input wire [WIDTH-1:0] write_data,
    input wire read_en,
    input wire [2:0] read_addr,
    output reg [WIDTH-1:0] read_data
);

    // Declare memory array
    reg [WIDTH-1:0] mem [DEPTH-1:0];

    // Initialize the memory to zeros
    integer i;
    always @(negedge rst_n or posedge clk) begin
        if (!rst_n) begin
            for (i = 0; i < DEPTH; i = i + 1) begin
                mem[i] <= 0;
            end
        end else if (write_en) begin
            mem[write_addr] <= write_data;
        end
    end

    // Read operation
    always @(posedge clk) begin
        if (read_en) begin
            read_data <= mem[read_addr];
        end else begin
            read_data <= 0;
        end
    end

endmodule
```