```verilog
module pe(
    input wire clk,
    input wire rst,
    input wire [31:0] a,
    input wire [31:0] b,
    output reg [31:0] c
);

    // Internal register to store the accumulation
    reg [63:0] accumulator;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            // Reset the accumulator and output to zero
            accumulator <= 64'd0;
            c <= 32'd0;
        end else begin
            // Compute the product and accumulate
            accumulator <= accumulator + (a * b);
            // Assign lower 32 bits to output c
            c <= accumulator[31:0];
        end
    end

endmodule
```