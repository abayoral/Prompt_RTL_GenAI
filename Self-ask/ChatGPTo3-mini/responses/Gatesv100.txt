module top_module( 
    input  [99:0] in,
    output [98:0] out_both,
    output [99:1] out_any,
    output [99:0] out_different 
);

    // Each bit of out_both indicates if both the corresponding input bit
    // and its left neighbor (in[i+1]) are 1 for i = 0 to 98.
    assign out_both = in[98:0] & in[99:1];

    // Each bit of out_any (for indices 1-99) indicates if either the corresponding
    // input bit or its right neighbor (in[i-1]) is 1.
    assign out_any = in[99:1] | in[98:0];

    // For out_different, each bit indicates if the input bit is different
    // from its left neighbor, with wrap-around such that the left neighbor of
    // in[99] is in[0]. This is implemented by a cyclic left shift.
    assign out_different = in ^ {in[0], in[99:1]};

endmodule