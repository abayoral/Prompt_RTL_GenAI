module top_module(
    input  [31:0] a,
    input  [31:0] b,
    input         sub,
    output [31:0] sum
);

    // Invert b when performing subtraction by XORing with sub replicated over 32 bits
    wire [31:0] b_mod;
    assign b_mod = b ^ {32{sub}};

    // Instantiate the lower 16‐bit adder
    wire carry;
    add16 lower_adder (
        .a   (a[15:0]),
        .b   (b_mod[15:0]),
        .cin (sub),
        .sum (sum[15:0]),
        .cout(carry)
    );

    // Instantiate the upper 16‐bit adder, using the carry-out from the lower adder as its carry-in
    add16 upper_adder (
        .a   (a[31:16]),
        .b   (b_mod[31:16]),
        .cin (carry),
        .sum (sum[31:16]),
        .cout()  // Final carry-out is not connected
    );

endmodule