module dual_port_ram #(
    parameter WIDTH = 6,
    parameter DEPTH = 8,
    parameter ADDR_WIDTH = 3
)(
    input                     clk,
    input                     rst_n,
    input                     write_en,
    input      [ADDR_WIDTH-1:0] write_addr,
    input      [WIDTH-1:0]      write_data,
    input                     read_en,
    input      [ADDR_WIDTH-1:0] read_addr,
    output reg [WIDTH-1:0]      read_data
);

    reg [WIDTH-1:0] mem [0:DEPTH-1];

    // Write Operation and Memory Reset Block
    integer i;
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            // Reset: initialize entire memory to 0
            for (i = 0; i < DEPTH; i = i + 1) begin
                mem[i] <= {WIDTH{1'b0}};
            end
        end
        else if (write_en) begin
            mem[write_addr] <= write_data;
        end
    end

    // Read Operation and Output Reset Block
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            read_data <= {WIDTH{1'b0}};
        end
        else if (read_en) begin
            read_data <= mem[read_addr];
        end
    end

endmodule