module freq_div(
    input  CLK_in,  // 100MHz input clock
    input  RST,     // Active high synchronous reset
    output reg CLK_50,  // 50MHz output clock
    output reg CLK_10,  // 10MHz output clock
    output reg CLK_1    // 1MHz output clock
);

    // Counter for generating CLK_10: toggles every 5 input clock cycles
    reg [2:0] cnt_10;

    // Counter for generating CLK_1: toggles every 50 input clock cycles
    reg [5:0] cnt_100;

    // CLK_50 generation: Toggle on every positive edge of CLK_in
    always @(posedge CLK_in) begin
        if (RST) begin
            CLK_50 <= 1'b0;
        end else begin
            CLK_50 <= ~CLK_50;
        end
    end

    // CLK_10 generation using counter (counts from 0 to 4)
    always @(posedge CLK_in) begin
        if (RST) begin
            cnt_10 <= 3'd0;
            CLK_10 <= 1'b0;
        end else begin
            if (cnt_10 == 3'd4) begin
                cnt_10 <= 3'd0;
                CLK_10 <= ~CLK_10;
            end else begin
                cnt_10 <= cnt_10 + 3'd1;
            end
        end
    end

    // CLK_1 generation using counter (counts from 0 to 49)
    always @(posedge CLK_in) begin
        if (RST) begin
            cnt_100 <= 6'd0;
            CLK_1   <= 1'b0;
        end else begin
            if (cnt_100 == 6'd49) begin
                cnt_100 <= 6'd0;
                CLK_1   <= ~CLK_1;
            end else begin
                cnt_100 <= cnt_100 + 6'd1;
            end
        end
    end

endmodule