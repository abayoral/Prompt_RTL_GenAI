```verilog
module multi_8bit (
    input [7:0] A,
    input [7:0] B,
    output reg [15:0] product
);
    integer i;
    
    always @(*) begin
        // Initialize product to zero
        product = 16'b0;
        
        // Use a temporary variable to hold the shifted multiplicand
        reg [15:0] temp_A;
        temp_A = {8'b0, A};
        
        // Iterate over each bit of B
        for (i = 0; i < 8; i = i + 1) begin
            // If the i-th bit of B is set, add shifted A to product
            if (B[i]) begin
                product = product + (temp_A << i);
            end
        end
    end

endmodule
```
