module calendar(
  input CLK,
  input RST,
  output reg [5:0] Secs,
  output reg [5:0] Mins,
  output reg [5:0] Hours
);

  // Seconds counter: counts from 0 to 59, then resets to 0.
  always @(posedge CLK or posedge RST) begin
    if (RST)
      Secs <= 6'd0;
    else if (Secs == 6'd59)
      Secs <= 6'd0;
    else
      Secs <= Secs + 6'd1;
  end

  // Minutes counter: increments when seconds complete their cycle (i.e., when Secs equals 59).
  // Counts from 0 to 59, then resets to 0.
  always @(posedge CLK or posedge RST) begin
    if (RST)
      Mins <= 6'd0;
    else if (Secs == 6'd59) begin
      if (Mins == 6'd59)
        Mins <= 6'd0;
      else
        Mins <= Mins + 6'd1;
    end
  end

  // Hours counter: increments when both seconds and minutes complete their cycle (i.e., Secs and Mins are both 59).
  // Counts from 0 to 23, then resets to 0.
  always @(posedge CLK or posedge RST) begin
    if (RST)
      Hours <= 6'd0;
    else if ((Secs == 6'd59) && (Mins == 6'd59)) begin
      if (Hours == 6'd23)
        Hours <= 6'd0;
      else
        Hours <= Hours + 6'd1;
    end
  end

endmodule