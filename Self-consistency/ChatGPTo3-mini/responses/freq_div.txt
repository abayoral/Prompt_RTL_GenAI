module freq_div(
    input CLK_in,
    input RST,
    output reg CLK_50,
    output reg CLK_10,
    output reg CLK_1
);

    // Internal counters for CLK_10 and CLK_1 generation
    reg [2:0] cnt_10;    // Enough for counting up to 4 (3 bits)
    reg [5:0] cnt_100;   // Enough for counting up to 49 (6 bits)

    always @(posedge CLK_in) begin
        if (RST) begin
            // Reset all outputs and counters
            CLK_50  <= 1'b0;
            CLK_10  <= 1'b0;
            CLK_1   <= 1'b0;
            cnt_10  <= 3'd0;
            cnt_100 <= 6'd0;
        end else begin
            // CLK_50 Generation: Toggle on every positive edge (divide by 2)
            CLK_50 <= ~CLK_50;
            
            // CLK_10 Generation: Count cycles, toggle when count reaches 4
            if (cnt_10 == 3'd4) begin
                cnt_10 <= 3'd0;
                CLK_10 <= ~CLK_10;
            end else begin
                cnt_10 <= cnt_10 + 3'd1;
            end

            // CLK_1 Generation: Count cycles, toggle when count reaches 49
            if (cnt_100 == 6'd49) begin
                cnt_100 <= 6'd0;
                CLK_1 <= ~CLK_1;
            end else begin
                cnt_100 <= cnt_100 + 6'd1;
            end
        end
    end

endmodule