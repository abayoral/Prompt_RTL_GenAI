module top_module (
    input [7:0] in,
    output reg [2:0] pos );

    always @* begin
        pos = 3'b000; // Default output
        case (in)
            8'b00000000: pos = 3'b000; // No bits are high
            8'b00000001: pos = 3'b000; // Bit 0 is high
            8'b00000010: pos = 3'b001; // Bit 1 is high
            8'b00000100: pos = 3'b010; // Bit 2 is high
            8'b00001000: pos = 3'b011; // Bit 3 is high
            8'b00010000: pos = 3'b100; // Bit 4 is high
            8'b00100000: pos = 3'b101; // Bit 5 is high
            8'b01000000: pos = 3'b110; // Bit 6 is high
            8'b10000000: pos = 3'b111; // Bit 7 is high
            default: begin
                // Find the first '1' bit
                pos = 3'b000; // Default
                if (in[0]) pos = 3'b000;
                else if (in[1]) pos = 3'b001;
                else if (in[2]) pos = 3'b010;
                else if (in[3]) pos = 3'b011;
                else if (in[4]) pos = 3'b100;
                else if (in[5]) pos = 3'b101;
                else if (in[6]) pos = 3'b110;
                else if (in[7]) pos = 3'b111;
            end
        endcase
    end

endmodule