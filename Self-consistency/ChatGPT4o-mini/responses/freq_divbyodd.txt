module freq_divbyodd #(
    parameter NUM_DIV = 5  // Default divisor
) (
    input wire clk,
    input wire rst_n,
    output reg clk_div
);

    reg [31:0] cnt1; // Counter for tracking clock cycles
    reg [31:0] cnt2; // Counter for tracking clock cycles
    reg clk_div1; // Auxiliary clock signal for positive edge
    reg clk_div2; // Auxiliary clock signal for negative edge

    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            cnt1 <= 0;
            clk_div1 <= 0;
        end else begin
            if (cnt1 < (NUM_DIV/2) - 1) begin
                cnt1 <= cnt1 + 1;
            end else begin
                cnt1 <= 0;
                clk_div1 <= ~clk_div1; // Toggle on reaching NUM_DIV/2
            end
        end
    end

    always @(negedge clk or negedge rst_n) begin
        if (!rst_n) begin
            cnt2 <= 0;
            clk_div2 <= 0;
        end else begin
            if (cnt2 < (NUM_DIV/2) - 1) begin
                cnt2 <= cnt2 + 1;
            end else begin
                cnt2 <= 0;
                clk_div2 <= ~clk_div2; // Toggle on reaching NUM_DIV/2
            end
        end
    end

    always @(*) begin
        clk_div = clk_div1 | clk_div2; // Combine both auxiliary clock signals
    end

endmodule