module freq_diveven #(
    parameter NUM_DIV = 4 // Ensure NUM_DIV is an even number
)(
    input wire clk,
    input wire rst_n,
    output reg clk_div
);
    reg [3:0] cnt; // 4-bit counter

    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            cnt <= 4'b0000; // Reset the counter
            clk_div <= 1'b0; // Reset the divided clock output
        end else begin
            if (cnt < (NUM_DIV / 2) - 1) begin
                cnt <= cnt + 1; // Increment the counter
            end else begin
                cnt <= 4'b0000; // Reset the counter
                clk_div <= ~clk_div; // Toggle the divided clock output
            end
        end
    end
endmodule