module top_module (
    input a, b, c, d, e,
    output [24:0] out
);

    assign out = {
        ~(a ^ a),          // 24: a == a
        ~(a ^ b),          // 23: a == b
        ~(a ^ c),          // 22: a == c
        ~(a ^ d),          // 21: a == d
        ~(a ^ e),          // 20: a == e
        ~(b ^ a),          // 19: b == a
        ~(b ^ b),          // 18: b == b
        ~(b ^ c),          // 17: b == c
        ~(b ^ d),          // 16: b == d
        ~(b ^ e),          // 15: b == e
        ~(c ^ a),          // 14: c == a
        ~(c ^ b),          // 13: c == b
        ~(c ^ c),          // 12: c == c
        ~(c ^ d),          // 11: c == d
        ~(c ^ e),          // 10: c == e
        ~(d ^ a),          // 09: d == a
        ~(d ^ b),          // 08: d == b
        ~(d ^ c),          // 07: d == c
        ~(d ^ d),          // 06: d == d
        ~(d ^ e),          // 05: d == e
        ~(e ^ a),          // 04: e == a
        ~(e ^ b),          // 03: e == b
        ~(e ^ c),          // 02: e == c
        ~(e ^ d),          // 01: e == d
        ~(e ^ e)           // 00: e == e
    };

endmodule