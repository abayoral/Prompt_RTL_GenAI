module top_module(
    input clk,
    input load,
    input [255:0] data,
    output reg [255:0] q
);

    reg [15:0] grid[15:0];

    integer i, j;
    
    // Function to calculate number of live neighbors
    function integer live_neighbors;
        input integer x, y;
        integer xi, yi;
    begin
        live_neighbors = 0;
        for (xi = x-1; xi <= x+1; xi = xi + 1) begin
            for (yi = y-1; yi <= y+1; yi = yi + 1) begin
                if (xi != x || yi != y) begin
                    if (grid[(xi+16)%16][(yi+16)%16] == 1) begin
                        live_neighbors = live_neighbors + 1;
                    end
                end
            end
        end
    end
    endfunction

    // Load data or update grid state
    always @(posedge clk) begin
        if (load) begin
            q <= data;
            for (i = 0; i < 16; i = i + 1) begin
                grid[i] <= data[i*16 +: 16];
            end
        end else begin
            reg [15:0] new_grid[15:0];
            for (i = 0; i < 16; i = i + 1) begin
                for (j = 0; j < 16; j = j + 1) begin
                    integer n = live_neighbors(i, j);
                    case (n)
                        2: new_grid[i][j] = grid[i][j];
                        3: new_grid[i][j] = 1;
                        default: new_grid[i][j] = 0;
                    endcase
                end
            end
            for (i = 0; i < 16; i = i + 1) begin
                grid[i] <= new_grid[i];
            end
            q <= {new_grid[0], new_grid[1], new_grid[2], new_grid[3], new_grid[4], new_grid[5], new_grid[6], new_grid[7], 
                  new_grid[8], new_grid[9], new_grid[10], new_grid[11], new_grid[12], new_grid[13], new_grid[14], new_grid[15]};
        end
    end

endmodule