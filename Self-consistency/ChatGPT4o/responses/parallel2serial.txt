module parallel2serial (
    input clk,
    input rst_n,
    input [3:0] d,
    output reg valid_out,
    output reg dout
);

    reg [1:0] cnt;

    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            cnt <= 2'b00;
            dout <= 1'b0;
            valid_out <= 1'b0;
        end else begin
            case (cnt)
                2'b00: begin
                    dout <= d[3]; // MSB
                    valid_out <= 1'b1;
                end
                2'b01: begin
                    dout <= d[2];
                end
                2'b10: begin
                    dout <= d[1];
                end
                2'b11: begin
                    dout <= d[0]; // LSB
                end
            endcase
            
            cnt <= cnt + 1'b1;
            if (cnt == 2'b11) begin
                valid_out <= 1'b0;
                cnt <= 2'b00;
            end
        end
    end

endmodule