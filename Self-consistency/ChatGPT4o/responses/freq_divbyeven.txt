module freq_diveven #(parameter NUM_DIV = 2) (
    input wire clk,
    input wire rst_n,
    output reg clk_div
);
    // Check if NUM_DIV is even at compile-time
    initial begin
        if (NUM_DIV % 2 != 0) begin
            $error("NUM_DIV must be even.");
        end
    end

    // Determine the necessary bit width for the counter
    localparam CNT_WIDTH = $clog2(NUM_DIV);

    // 4-bit register for counting
    reg [CNT_WIDTH-1:0] cnt;

    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            cnt <= 0;
            clk_div <= 0;
        end else begin
            if (cnt == (NUM_DIV - 1)) begin
                cnt <= 0;
                clk_div <= ~clk_div; // Toggle clk_div
            end else begin
                cnt <= cnt + 1;
            end
        end
    end
endmodule