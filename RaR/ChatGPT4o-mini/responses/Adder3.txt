```
module ripple_carry_adder (
    input  [2:0] A,       // 3-bit input A
    input  [2:0] B,       // 3-bit input B
    input        Cin,      // Carry-in input
    output [2:0] Sum,      // 3-bit output Sum
    output       Cout      // Carry-out output
);

    wire c1, c2; // Intermediate carry wires

    // Instantiate the first full adder (LSB)
    full_adder FA0 (
        .a(A[0]),
        .b(B[0]),
        .cin(Cin),
        .sum(Sum[0]),
        .cout(c1)
    );

    // Instantiate the second full adder (middle bit)
    full_adder FA1 (
        .a(A[1]),
        .b(B[1]),
        .cin(c1),
        .sum(Sum[1]),
        .cout(c2)
    );

    // Instantiate the third full adder (MSB)
    full_adder FA2 (
        .a(A[2]),
        .b(B[2]),
        .cin(c2),
        .sum(Sum[2]),
        .cout(Cout)
    );

endmodule

module full_adder (
    input  a,       // First input
    input  b,       // Second input
    input  cin,     // Carry-in input
    output sum,     // Sum output
    output cout     // Carry-out output
);
    assign sum = a ^ b ^ cin;         // Sum calculation
    assign cout = (a & b) | (cin & (a ^ b)); // Carry-out calculation
endmodule
```