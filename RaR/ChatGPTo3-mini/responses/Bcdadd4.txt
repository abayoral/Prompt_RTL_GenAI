module top_module(
    input  [15:0] a,   // First 4-digit BCD number, each digit is 4 bits
    input  [15:0] b,   // Second 4-digit BCD number, each digit is 4 bits
    input         cin, // Overall carry-in
    output [15:0] sum, // 4-digit BCD sum (each digit 4 bits)
    output        cout // Final carry-out (overflow beyond 4-digit range)
);

  // Internal carries between BCD full adders
  wire c1, c2, c3;

  // Instantiate the first BCD full adder (least significant digit)
  bcd_fadd u0 (
    .a   (a[3:0]),
    .b   (b[3:0]),
    .cin (cin),
    .sum (sum[3:0]),
    .cout(c1)
  );

  // Instantiate the second BCD full adder
  bcd_fadd u1 (
    .a   (a[7:4]),
    .b   (b[7:4]),
    .cin (c1),
    .sum (sum[7:4]),
    .cout(c2)
  );

  // Instantiate the third BCD full adder
  bcd_fadd u2 (
    .a   (a[11:8]),
    .b   (b[11:8]),
    .cin (c2),
    .sum (sum[11:8]),
    .cout(c3)
  );

  // Instantiate the fourth BCD full adder (most significant digit)
  bcd_fadd u3 (
    .a   (a[15:12]),
    .b   (b[15:12]),
    .cin (c3),
    .sum (sum[15:12]),
    .cout(cout)
  );

endmodule