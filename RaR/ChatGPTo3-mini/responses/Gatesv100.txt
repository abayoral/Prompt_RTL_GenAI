module top_module(
    input  [99:0] in,
    output [98:0] out_both,
    output [99:1] out_any,
    output [99:0] out_different
);

    // For each position i from 0 to 98, out_both[i] is '1' if both in[i] and its left neighbour in[i+1] are '1'.
    assign out_both = in[98:0] & in[99:1];

    // For each position i from 1 to 99, out_any[i] is '1' if either in[i] or its right neighbour in[i-1] is '1'.
    assign out_any = in[99:1] | in[98:0];

    // For each position i from 0 to 98, out_different[i] is '1' if in[i] is different from its left neighbour in[i+1],
    // and for i = 99, out_different[99] is '1' if in[99] is different from in[0] (wrap-around condition).
    assign out_different = in ^ {in[0], in[99:1]};

endmodule