Imagine you are an experienced Verilog hardware designer tasked with creating a dual-port Random Access Memory (RAM) module using the Verilog Hardware Description Language (HDL). This module must be carefully designed with the following key specifications and functionalities in mind:

Overview:
• You need to design a memory component with two main ports—one for reading and one for writing—that operate simultaneously. This dual-port characteristic allows concurrent read and write operations, which is common in high-performance designs.

Memory Specifications:
• The memory should have a depth of 8 addresses, meaning it can store 8 individual data words.
• Each data word must be 6 bits wide.
• At the outset, every memory location should be initialized to zero (represented in binary as "000000").

Operational Requirements:
1. Read Operation:
   • The module must include a read control signal, typically named read_en. When this signal is asserted high ('1'), the memory will perform a read operation.
   • The read process should fetch the 6-bit data word from the location specified by an address input, referred to as read_addr.
   • The output of this operation should be made available on a read_data output port.

2. Write Operation:
   • There must also be a write control signal, commonly called write_en, which when high ('1') triggers a write operation.
   • During this operation, a 6-bit data word provided at the write_data input should be written into the memory location specified by the write_addr input.

Input and Output Ports:
• Input ports that your module should handle include:
   - clk: The clock signal that ensures all operations occur synchronously.
   - rst_n: An active-low reset signal. When this signal is low ('0'), the memory contents should be reset, initializing all memory locations to zero.
   - write_en: The signal enabling write operations.
   - write_addr: The address input to select where the data is to be written.
   - write_data: The 6-bit data input for storage into memory.
   - read_en: The signal enabling read operations.
   - read_addr: The address input to select which memory location’s data is to be read.
• The module should also provide an output port:
   - read_data: This output port will present the 6-bit data word retrieved from the specified memory location during a read operation.

Parameterization:
• The design should be parameterized to allow flexibility. This means defining parameters for the bit width and depth of the RAM (for instance, WIDTH set to 6 and DEPTH set to 8), which helps in maintaining and modifying the design efficiently.

Design Implementation Considerations:
• The design should include two separate always blocks:
   1. The first always block will manage the write operations. It should be sensitive to the clock and reset signals, ensuring that the write process is properly synchronized and that the memory is correctly initialized during reset.
   2. The second always block will handle the read operations. Similarly, this block must be clock-sensitive and should output the correct data based on the read enable signal and the provided read address.
• During a reset (when rst_n is deasserted), ensure that all memory locations and any associated registers are set to zero, guaranteeing that the RAM is in a known starting state before any operations occur.

By thoroughly addressing these detailed requirements, your Verilog module for dual-port RAM will be well-equipped to handle simultaneous read and write operations in a synchronized manner, meeting the strict design specifications provided.