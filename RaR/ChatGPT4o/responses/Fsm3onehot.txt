```verilog
module moore_state_machine (
    input wire clk,
    input wire reset,
    input wire in,
    output reg out
);
    // State encoding using one-hot
    parameter STATE_A = 4'b0001;
    parameter STATE_B = 4'b0010;
    parameter STATE_C = 4'b0100;
    parameter STATE_D = 4'b1000;
    
    reg [3:0] state, next_state;

    // State transition logic
    always @(*) begin
        case (state)
            STATE_A: begin
                if (in == 0)
                    next_state = STATE_A;
                else
                    next_state = STATE_B;
            end
            STATE_B: begin
                if (in == 0)
                    next_state = STATE_C;
                else
                    next_state = STATE_B;
            end
            STATE_C: begin
                if (in == 0)
                    next_state = STATE_A;
                else
                    next_state = STATE_D;
            end
            STATE_D: begin
                if (in == 0)
                    next_state = STATE_C;
                else
                    next_state = STATE_B;
            end
            default: begin
                next_state = STATE_A; // Default state
            end
        endcase
    end

    // Output logic
    always @(*) begin
        case (state)
            STATE_A: out = 0;
            STATE_B: out = 0;
            STATE_C: out = 0;
            STATE_D: out = 1;
            default: out = 0;
        endcase
    end

    // State register
    always @(posedge clk or posedge reset) begin
        if (reset) begin
            state <= STATE_A; // Reset to STATE_A
        end else begin
            state <= next_state;
        end
    end
endmodule
```