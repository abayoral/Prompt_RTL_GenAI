```verilog
module freq_div (
    input wire CLK_in,
    input wire RST,
    output reg CLK_50,
    output reg CLK_10,
    output reg CLK_1
);

    // Internal counters
    reg [2:0] cnt_10; // Counter for CLK_10 (requires up to 5: 0-4)
    reg [5:0] cnt_100; // Counter for CLK_1 (requires up to 50: 0-49)

    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            // Reset all outputs and counters
            CLK_50 <= 0;
            CLK_10 <= 0;
            CLK_1 <= 0;
            cnt_10 <= 0;
            cnt_100 <= 0;
        end else begin
            // Divide CLK_in by 2 for CLK_50
            CLK_50 <= ~CLK_50;

            // Divide CLK_in by 10 for CLK_10 using cnt_10
            if (cnt_10 == 4) begin
                CLK_10 <= ~CLK_10;
                cnt_10 <= 0;
            end else begin
                cnt_10 <= cnt_10 + 1;
            end

            // Divide CLK_in by 100 for CLK_1 using cnt_100
            if (cnt_100 == 49) begin
                CLK_1 <= ~CLK_1;
                cnt_100 <= 0;
            end else begin
                cnt_100 <= cnt_100 + 1;
            end
        end
    end

endmodule
```
