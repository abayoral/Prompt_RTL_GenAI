```verilog
module sub_64bit(
    input signed [63:0] A,
    input signed [63:0] B,
    output signed [63:0] result,
    output overflow
);
    wire signed [63:0] B_neg; // Negated value of B
    wire signed [63:0] temp_result;

    // Negate B
    assign B_neg = ~B + 1;

    // Perform subtraction
    assign temp_result = A + B_neg;

    // Assign the result
    assign result = temp_result;

    // Detect overflow
    assign overflow = ((A[63] == 0 && B[63] == 1 && result[63] == 1) ||
                       (A[63] == 1 && B[63] == 0 && result[63] == 0));

endmodule
```
