```verilog
module top_module(
    input in,
    input [1:0] state,
    output reg [1:0] next_state,
    output reg out);

    parameter A = 2'b00, B = 2'b01, C = 2'b10, D = 2'b11;

    // State transition logic: next_state = f(state, in)
    always @(*) begin
        case (state)
            A: 
                if (in == 0)
                    next_state = A;
                else
                    next_state = B;
            B: 
                if (in == 0)
                    next_state = C;
                else
                    next_state = B;
            C: 
                if (in == 0)
                    next_state = A;
                else
                    next_state = D;
            D: 
                if (in == 0)
                    next_state = C;
                else
                    next_state = B;
            default: 
                next_state = A; // Default to state A
        endcase
    end

    // Output logic: out = f(state) for a Moore state machine
    always @(*) begin
        case (state)
            A, B, C: out = 0;
            D: out = 1;
            default: out = 0; // Default output
        endcase
    end

endmodule
```