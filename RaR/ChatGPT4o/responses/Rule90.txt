```verilog
module top_module (
    input clk,
    input load,
    input [511:0] data,
    output reg [511:0] q
);
    always @(posedge clk) begin
        if (load) begin
            q <= data;
        end else begin
            reg [511:0] next_state;
            integer i;
            next_state[0] = q[1];  // Cell 0's next state: q[-1] = 0, so q[0] = q[1]
            next_state[511] = q[510];  // Cell 511's next state: q[512] = 0, so q[511] = q[510]
            for (i = 1; i < 511; i = i + 1) begin
                next_state[i] = q[i-1] ^ q[i+1];  // Rule 90: XOR of left and right neighbors
            end
            q <= next_state;
        end
    end
endmodule
```