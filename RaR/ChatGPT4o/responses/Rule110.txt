```verilog
module rule110 (
    input wire clk,
    input wire reset,
    input wire load,
    input wire [511:0] data,
    output reg [511:0] q
);
    reg [511:0] next_state;

    always @(*) begin
        integer i;
        for (i = 0; i < 512; i = i + 1) begin
            case ({(i == 0) ? 1'b0 : q[i-1], q[i], (i == 511) ? 1'b0 : q[i+1]})
                3'b111: next_state[i] = 0;
                3'b110: next_state[i] = 1;
                3'b101: next_state[i] = 1;
                3'b100: next_state[i] = 0;
                3'b011: next_state[i] = 1;
                3'b010: next_state[i] = 1;
                3'b001: next_state[i] = 1;
                3'b000: next_state[i] = 0;
                default: next_state[i] = 0; // Default case, should not be reached
            endcase
        end
    end

    always @(posedge clk or posedge reset) begin
        if (reset) begin
            q <= 512'b0;
        end else if (load) begin
            q <= data;
        end else begin
            q <= next_state;
        end
    end
endmodule
```