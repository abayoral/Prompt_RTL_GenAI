As a professional Verilog hardware designer, your expertise in drafting and implementing digital designs using the Verilog Hardware Description Language (HDL) will be applied to creating a sophisticated module for a dual-port Random Access Memory (RAM) structure. This design task involves constructing a RAM with distinct features: a memory depth comprising 8 addressable locations, with each data word comprised of a 6-bit length. The initial state of this RAM requires all storage locations to be pre-initialized to zero, represented in binary as "000000."

Your goal is to develop this RAM with dual-port functionality, allowing it to manage concurrent read and write operations effectively. To facilitate this function, the RAM should include separate input and output ports dedicated to each of these operations and operate synchronously, adhering to clock input signals to manage and schedule memory actions. The dual-port RAM's key functionalities can be divided into two primary operations:

1. **Read Operation**: This operation is initiated when a designated control signal, known as `read_en`, is activated or set to high ('1'). Upon activation, the RAM should access and output data from the address specified by another signal, `read_addr`. Address decoding is essential, enabling the precise retrieval of a 6-bit data word stored at the specified memory location. Subsequently, the retrieved data should be made available on an output port, termed `read_data`.

2. **Write Operation**: Conversely, a write operation is triggered by another control signal, `write_en`, when it is set to high ('1'). During this operation, a data word described by the input, `write_data`, should be transcribed into the memory at the location determined by the `write_addr` input.

For successful implementation, your design should incorporate the following input ports:

- `clk`: This clock signal is crucial for timing the RAM operations, ensuring processes occur in synchrony with the memory operation schedule.
- `rst_n`: An active-low reset signal designed to reset the contents of the memory to a predefined state of zero when held low ('0').
- `write_en`: A signal governing the write activities, enabling the writing operation only when in a high state.
- `write_addr`: Provides the address input, specifying the exact memory location where incoming data should be stored.
- `write_data`: Represents the data input, which contains the information destined for storage in the targeted memory location.
- `read_en`: A signal that enables reading operations, triggered when in a high state.
- `read_addr`: Specifies the address input, indicating the precise memory location from which data should be read.

Additionally, the design will feature the following output port:
- `read_data`: The port responsible for transmitting the data retrieved from a specified memory address.

Moreover, consideration should be given to incorporating parameters that define the bit width (`WIDTH = 6`) and depth (`DEPTH = 8`) configurations of the RAM. This aspect ensures that the design remains parameterized and adaptable to potential future requirements or variations in specifications.

In the systematic implementation of the dual-port RAM, it is advisable to employ two always blocks: one devoted to managing the writing process and the other responsible for overseeing reading operations. These blocks should be responsive to transitions in clock and reset signal logic levels, enabling synchronized operation and thorough initialization of the RAM array. Upon activation of the system reset, ensure that the RAM data and any associated registers are reset to zero, adequately preparing the RAM for subsequent tasks. The resultant Verilog code is expected to thoroughly embody these attributes, capturing the complete range of specified functionalities and operational requirements.