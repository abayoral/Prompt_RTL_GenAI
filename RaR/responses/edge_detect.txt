```verilog
module edge_detect(
    input clk,
    input rst_n,
    input a,
    output reg rise,
    output reg down
);

    reg prev_a;

    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            // Reset state when rst_n is low
            prev_a <= 1'b0;
            rise <= 1'b0;
            down <= 1'b0;
        end else begin
            // Edge detection logic
            if (a && !prev_a) begin // Rising edge detected
                rise <= 1'b1;
            end else begin
                rise <= 1'b0;
            end

            if (!a && prev_a) begin // Falling edge detected
                down <= 1'b1;
            end else begin
                down <= 1'b0;
            end

            // Update previous state of 'a'
            prev_a <= a;
        end
    end

endmodule
```