In this task, you are required to develop a circuit design for a memory module specifically structured as an 8x1 configuration. The writing process to this memory is unique in that it relies on shifting-in bits rather than directly addressing memory locations. In essence, this behavior means that new data is sequentially shifted into the memory, with the most significant bit (MSB) being updated first based on the data input line. The memory is capable of "random access" reading, a feature typical of standard Random Access Memory (RAM) systems, allowing any bit to be accessed independently. 

Your first objective is to design an 8-bit shift register, which consists of a series of 8 D-type flip-flops. These flip-flops should be labeled sequentially with outputs Q[0] through Q[7]. Here, Q[0] will serve as the output for the least significant bit (LSB), moving up to Q[7] for the MSB. The shift register should receive its input through a line labeled ‘S,’ directly feeding into the D input of Q[0]. A control line termed ‘enable’ is necessary to determine when the bits should be actively shifted through the register.

Once the shift register is established, the next phase involves expanding the circuit to integrate three additional input signals, denoted as A, B, and C. Together, these inputs serve as a 3-bit selector that influences the eventual output, labeled as Z. The output behavior should adhere to the following logic: when the combination ABC equals 000, the output Z should be the same as Q[0], when ABC is 001, Z should mirror Q[1], and this pattern continues up through ABC equalling 111 to produce an output Z equivalent to Q[7]. This part of the circuit requires multiplexers to accommodate this selection functionality. Note that this design effectively realizes a 3-input look-up-table (LUT), which is a common logic function implementation in digital systems design.

To encapsulate the complete design, you are expected to code this logic into a module, conventionally referred to as ‘top_module’. This module will take as inputs a clock signal (clk), an enable signal, the serial input S (for the shift register), and the select inputs A, B, and C, ultimately producing the output Z. It's crucial to adhere strictly to the constraint of utilizing only the components specified: the shift register and multiplexers.