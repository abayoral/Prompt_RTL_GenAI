You are seeking assistance from a professional Verilog designer to write a Verilog module that functions as a frequency divider, designed specifically for even division factors. The constructed module, named `freq_diveven`, takes an input clock signal (`clk`) and divides its frequency by a user-specified even number, controlled by a parameter named `NUM_DIV`. The resulting output is a divided clock signal (`clk_div`). 

Here are the specific aspects and ports you are interested in including:

1. **Input Ports:**
   - `clk`: This is the primary clock signal that the module will process and divide.
   - `rst_n`: An active-low reset signal used to initialize or reset the module's internal states and signals. When this signal is low, the system resets.

2. **Output Port:**
   - `clk_div`: The divided output clock signal, which toggles at a reduced frequency based on the even division factor specified.

3. **Operation and Implementation Details:**
   - A counter, which is a 4-bit register (`cnt`), will be utilized to count the input clock cycles. The design specifies that it resets every time a predetermined cycle count equates to half of the parameter `NUM_DIV`, both incrementing with `clk` and controlling when the output toggles.
   - When `rst_n` is asserted low, both the counter and the `clk_div` signal should be reset to a known state, typically zero.
   - On the detection of each rising edge of the `clk`, the counter should increment. If this counter reaches a threshold of half of the division factor decremented by one (`NUM_DIV/2 - 1`), the counter will reset, and the `clk_div` should toggle its state, achieving the division.
   - The function of the counter essentially helps keep track of how many clock cycles have passed, aiding the toggling of `clk_div` precisely at the required frequency.

Given this context, you are asking to receive the complete Verilog code for this module, with a clear operational description that adheres to the stated requirements and specifics mentioned above, ensuring that the division factor provided, `NUM_DIV`, remains an even number to guarantee the correctness of the operations as designed.