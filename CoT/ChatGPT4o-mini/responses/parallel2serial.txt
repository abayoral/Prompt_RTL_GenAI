```
module parallel2serial (
    input wire clk,
    input wire rst_n,
    input wire [3:0] d,
    output reg valid_out,
    output reg dout
);

    reg [1:0] cnt; // 2-bit counter to track output bit position

    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            dout <= 1'b0;
            valid_out <= 1'b0;
            cnt <= 2'b00;
        end else begin
            if (cnt < 2'b11) begin
                valid_out <= 1'b1;
                dout <= d[3 - cnt]; // Output bits from MSB to LSB
                cnt <= cnt + 1;
            end else begin
                valid_out <= 1'b0; // Signal not valid after last bit
                cnt <= 2'b00; // Reset counter after all bits have been output
            end
        end
    end

endmodule
```