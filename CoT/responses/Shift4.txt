Chain of Thought:

1. Understand the Requirements:
    - We need a 4-bit shift register that shifts its contents right on each clock cycle.
    - It must have an asynchronous reset signal (areset) that, when active, resets the register to zero.
    - It should have a synchronous load signal (load) that, when active, loads the register with a 4-bit input (data).
    - An enable signal (ena) that, when active and load is not active, allows the register to shift right.
    - If both load and ena are active, load takes precedence.

2. Determine the Inputs and Outputs:
    - Inputs: clk, areset, load, ena, data[3:0]
    - Output: q[3:0]

3. Define Intermediate Signals:
    - No intermediate signals are needed since the logic can be placed directly within the always block.

4. Structuring the Module:
    - Start with the module declaration, specifying the inputs and outputs.
    - Use an always block triggered on the rising edge of clk or the edge of areset.
    - Inside the always block, first check the asynchronous reset. If areset is high, set the register q to zero.
    - If areset is not high, check the synchronous signals in the order of their priority:
        - If load is high, load the data into q.
        - If ena is high, shift the register q to the right.
        - Else, maintain the current state of q.

5. Writing the Verilog Code:

```verilog
module top_module (
    input clk,
    input areset,  // async active-high reset to zero
    input load,
    input ena,
    input [3:0] data,
    output reg [3:0] q
);
    // Shift register logic with areset, load, and enable
    always @(posedge clk or posedge areset) begin
        if (areset) begin
            q <= 4'b0000;
        end else if (load) begin
            q <= data;
        end else if (ena) begin
            q <= {1'b0, q[3:1]};
        end
    end
endmodule
```

In this code:
- The always block checks if areset is high to immediately set q to zero.
- If areset is not active, it checks if load is high to load the data into q.
- If neither areset nor load is active and ena is high, the register shifts right, bringing in a zero at the MSB.
- If none of these conditions are met, q maintains its current state.