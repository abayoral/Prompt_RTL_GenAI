To design a 3-bit comparator in Verilog that can compare two 3-bit binary numbers and determine their relational status, we need to follow these steps:

1. **Understand the Requirements**: We need a module named `comparator_3bit` that takes two 3-bit inputs, `A` and `B`, and produces three 1-bit outputs: `A_greater`, `A_equal`, and `A_less`. The outputs should reflect whether A is greater than, equal to, or less than B, respectively.

2. **Determine the Inputs and Outputs**:
   - Inputs: `A[2:0]`, `B[2:0]`
   - Outputs: `A_greater`, `A_equal`, `A_less`

3. **Define Intermediate Signals**: No intermediate signals are necessarily required, as the logic can be implemented directly in the outputs using logical expressions.

4. **Structuring the Module**:
   - Start with the module declaration and specify the inputs and outputs.
   - Use assign statements to define the logic for each output based on comparisons between A and B.
   - Ensure mutual exclusivity among the outputs so that only one is high at any given time.

5. **Writing the Verilog Code**: Below is the Verilog module based on the above understanding.

```verilog
module comparator_3bit (
    input wire [2:0] A,  // 3-bit input A
    input wire [2:0] B,  // 3-bit input B
    output wire A_greater,  // Output high when A > B
    output wire A_equal,    // Output high when A == B
    output wire A_less      // Output high when A < B
);
    // Comparator logic: Compare A and B
    assign A_greater = (A > B);
    assign A_equal = (A == B);
    assign A_less = (A < B);
    
    // As a safety check to ensure mutual exclusivity:
    // 'A_greater', 'A_equal', and 'A_less' should never be high at the same time.
    // The nature of comparison naturally ensures this due to mutually exclusive conditions.
endmodule
```

In this implementation:
- **`A_greater`**: Is high if A is greater than B.
- **`A_equal`**: Is high if A is equal to B.
- **`A_less`**: Is high if A is less than B.

This code ensures that the outputs reflect the correct relational status between the two inputs A and B, adhering to the standard comparator logic operations.