module top_module ( 
    input clk, 
    input [7:0] d, 
    input [1:0] sel, 
    output reg [7:0] q 
);

    // Internal wires to hold the output of each D flip-flop
    wire [7:0] q1;
    wire [7:0] q2;
    wire [7:0] q3;
    
    // Instantiate the three D flip-flops for the shift register chain
    my_dff8 dff1 (
        .clk(clk),
        .d(d),
        .q(q1)
    );
    
    my_dff8 dff2 (
        .clk(clk),
        .d(q1),
        .q(q2)
    );
    
    my_dff8 dff3 (
        .clk(clk),
        .d(q2),
        .q(q3)
    );
    
    // 4-to-1 multiplexer selecting output based on sel value
    always @(*) begin
        case (sel)
            2'b00: q = d;    // No delay: pass the input directly
            2'b01: q = q1;   // 1-cycle delay: output after first flip-flop
            2'b10: q = q2;   // 2-cycle delay: output after second flip-flop
            2'b11: q = q3;   // 3-cycle delay: output after third flip-flop
            default: q = d;  // Default case, though not strictly necessary as sel is 2-bit
        endcase
    end

endmodule