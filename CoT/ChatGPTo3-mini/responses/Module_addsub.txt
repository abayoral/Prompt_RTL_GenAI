module top_module(
    input [31:0] a,
    input [31:0] b,
    input sub,
    output [31:0] sum
);

    wire [15:0] b_low, b_high;
    wire cout_lower;

    // Invert b input bits when performing subtraction by XORing with sub replicated 16 times.
    assign b_low  = b[15:0]  ^ {16{sub}};
    assign b_high = b[31:16] ^ {16{sub}};

    // Lower 16-bit adder instance with carry-in connected to sub.
    add16 lower_adder (
        .a(a[15:0]),
        .b(b_low),
        .cin(sub),
        .sum(sum[15:0]),
        .cout(cout_lower)
    );

    // Upper 16-bit adder instance with carry-in from lower adder.
    add16 upper_adder (
        .a(a[31:16]),
        .b(b_high),
        .cin(cout_lower),
        .sum(sum[31:16]),
        .cout()
    );

endmodule