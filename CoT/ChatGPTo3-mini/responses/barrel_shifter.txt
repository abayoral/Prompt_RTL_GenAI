module barrel_shifter(
    input  [7:0] in,
    input  [2:0] ctrl,
    output [7:0] out
);

    // Intermediate wires for staged rotations.
    // Stage for 4-bit rotate (controlled by ctrl[2])
    wire [7:0] stage4;
    // Stage for 2-bit rotate (controlled by ctrl[1])
    wire [7:0] stage2;
    // Stage for 1-bit rotate (controlled by ctrl[0])
    wire [7:0] stage1;

    // Stage 1: 4-bit rotation
    // If ctrl[2] is asserted, rotate left by 4 positions,
    // i.e., take lower 4 bits in MSB side and upper 4 bits in LSB side.
    assign stage4 = ctrl[2] ? {in[3:0], in[7:4]} : in;

    // Stage 2: 2-bit rotation on the result of first stage.
    // If ctrl[1] is asserted, rotate left by 2 positions.
    assign stage2 = ctrl[1] ? {stage4[5:0], stage4[7:6]} : stage4;

    // Stage 3: 1-bit rotation on the result of the previous stage.
    // If ctrl[0] is asserted, rotate left by 1 position.
    assign stage1 = ctrl[0] ? {stage2[6:0], stage2[7]} : stage2;

    // Final output after applying the staged rotations.
    assign out = stage1;

endmodule