module edge_detect(
    input  clk,
    input  rst_n,
    input  a,
    output reg rise,
    output reg down
);

  // Register to store the previous value of input 'a'
  reg prev_a;

  always @(posedge clk or negedge rst_n) begin
    if (!rst_n) begin
      // Active low reset: clear previous state and outputs
      prev_a <= 1'b0;
      rise   <= 1'b0;
      down   <= 1'b0;
    end
    else begin
      // Detect rising edge: current 'a' is high and previous was low
      rise <= (~prev_a) & a;
      
      // Detect falling edge: current 'a' is low and previous was high
      down <= prev_a & (~a);
      
      // Update the previous state for next clock cycle
      prev_a <= a;
    end
  end

endmodule