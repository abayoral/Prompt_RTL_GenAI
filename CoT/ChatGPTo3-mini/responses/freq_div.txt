module freq_div(
    input CLK_in,
    input RST,
    output reg CLK_50,
    output reg CLK_10,
    output reg CLK_1
);

    // Counter for generating CLK_10
    reg [2:0] cnt_10;
    // Counter for generating CLK_1 (needs to count up to 49)
    reg [5:0] cnt_100;
    
    // Generate CLK_50: toggle on every positive edge of CLK_in
    always @(posedge CLK_in or posedge RST) begin
        if (RST)
            CLK_50 <= 1'b0;
        else
            CLK_50 <= ~CLK_50;
    end

    // Generate CLK_10: toggle when cnt_10 reaches 4 (i.e. every 5 cycles of CLK_in)
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            cnt_10 <= 3'd0;
            CLK_10 <= 1'b0;
        end else if (cnt_10 == 3'd4) begin
            cnt_10 <= 3'd0;
            CLK_10 <= ~CLK_10;
        end else
            cnt_10 <= cnt_10 + 1'b1;
    end

    // Generate CLK_1: toggle when cnt_100 reaches 49 (i.e. every 50 cycles of CLK_in)
    always @(posedge CLK_in or posedge RST) begin
        if (RST) begin
            cnt_100 <= 6'd0;
            CLK_1   <= 1'b0;
        end else if (cnt_100 == 6'd49) begin
            cnt_100 <= 6'd0;
            CLK_1   <= ~CLK_1;
        end else
            cnt_100 <= cnt_100 + 1'b1;
    end

endmodule