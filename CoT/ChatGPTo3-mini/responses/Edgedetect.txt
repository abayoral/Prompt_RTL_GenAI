module top_module (
    input clk,
    input [7:0] in,
    output reg [7:0] pedge
);

    // Register to store previous cycle's input
    reg [7:0] in_d;

    always @(posedge clk) begin
        // On each clock, generate the pedge signal,
        // which is set when a bit was 0 in the previous cycle and is 1 in the current cycle.
        pedge <= (~in_d) & in;
        // Update the stored input for edge detection
        in_d <= in;
    end

endmodule